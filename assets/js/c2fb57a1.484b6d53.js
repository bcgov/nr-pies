(self.webpackChunknr_pies=self.webpackChunknr_pies||[]).push([["7751"],{99618:function(e,t,s){"use strict";s.r(t),s.d(t,{frontMatter:()=>u,toc:()=>g,default:()=>v,metadata:()=>n,assets:()=>f,contentTitle:()=>m});var n=JSON.parse('{"id":"spec/element/data/code","title":"Code \u{1F52C}","description":"A code symbol representing the primary code value.","source":"@site/docs/spec/element/data/code.mdx","sourceDirName":"spec/element/data","slug":"/spec/element/data/code","permalink":"/nr-pies/docs/spec/element/data/code","draft":false,"unlisted":false,"editUrl":"https://github.com/bcgov/nr-pies/tree/main/docs/spec/element/data/code.mdx","tags":[{"inline":false,"label":"Developer","permalink":"/nr-pies/docs/tags/developer","description":"Content related to technical structure and implementation"}],"version":"current","lastUpdatedBy":"Jeremy Ho","lastUpdatedAt":1747247664000,"frontMatter":{"id":"code","title":"Code \u{1F52C}","description":"A code symbol representing the primary code value.","tags":["developer"]},"sidebar":"docSidebar","previous":{"title":"Primitive Types","permalink":"/nr-pies/docs/spec/element/data/primitive_types"},"next":{"title":"Coding \u{1F52C}","permalink":"/nr-pies/docs/spec/element/data/coding"}}'),r=s(74848),i=s(84429),o=s(60464),c=s(2544),a=s.n(c),d=s(84109),l=s(93703),h=s(92870),p=JSON.parse('{"$id":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/element/data/code.schema.json","$schema":"http://json-schema.org/draft-07/schema#","title":"Code","description":"A code symbol representing the primary code value.","type":"string","pattern":"^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$"}');let u={id:"code",title:"Code \u{1F52C}",description:"A code symbol representing the primary code value.",tags:["developer"]},m,f={},g=[{value:"Scope",id:"scope",level:2},{value:"Structure",id:"structure",level:2},{value:"Specification",id:"specification",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"References",id:"references",level:2}];function j(e){let t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"/docs/spec#maturity",children:(0,r.jsx)(t.img,{src:"https://img.shields.io/badge/Maturity-Trial-green",alt:"Maturity"})})}),"\n",(0,r.jsxs)(t.p,{children:["Official URL: ",(0,r.jsx)(t.code,{children:"https://bcgov.github.io/nr-pies/docs/spec/element/data/code"})]}),"\n",(0,r.jsxs)(t.p,{children:["JSON Schema URL: ",(0,r.jsx)(t.a,{href:"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/element/data/code.schema.json",children:"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/element/data/code.schema.json"})]}),"\n",(0,r.jsxs)(t.p,{children:["A code is a value taken from a set of controlled symbols defined within a ",(0,r.jsx)(t.a,{href:"/docs/category/code-system",children:"Code System"}),".\nCode values shall adhere to the SCREAMING_SNAKE_CASE convention, utilizing uppercase letters and underscores to\ndelineate words. Code values may contain numeric digits, but they must not be the first character."]}),"\n",(0,r.jsx)(t.h2,{id:"scope",children:"Scope"}),"\n",(0,r.jsx)(t.p,{children:"This data type is intended to represent a finite set of controlled strings which represents a specific, discrete\nconcept, element or idea."}),"\n",(0,r.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Attribute"}),(0,r.jsx)(t.th,{children:"Value"}),(0,r.jsx)(t.th,{children:"Description & Constraints"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Type"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsxs)(t.td,{children:["Shall be represented in UTF-8 format, as specified in ",(0,r.jsx)(t.a,{href:"https://datatracker.ietf.org/doc/html/rfc3629",children:"RFC 3629"}),", which is an extension of the ",(0,r.jsx)(t.a,{href:"https://www.iso.org/standard/76835.html",children:"ISO 10646-1"})," standard."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Regex Pattern"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$"})}),(0,r.jsx)(t.td,{children:"String which adheres to the SCREAMING_SNAKE_CASE convention: starts with an uppercase letter, followed by uppercase letters or digits, optionally separated by underscores, with no leading or trailing whitespace."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"specification",children:"Specification"}),"\n",(0,r.jsxs)(d.default,{queryString:"tab",children:[(0,r.jsx)(l.default,{value:"schema",label:"Schema",default:!0,children:(0,r.jsx)(a(),{resolverOptions:(0,h.kG)({remote:!0}),schema:p,viewerOptions:{showExamples:!0}})}),(0,r.jsx)(l.default,{value:"source",label:"Source",children:(0,r.jsx)(o.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(p,null,2)})})]}),"\n",(0,r.jsx)(t.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,r.jsxs)(t.p,{children:["This data structure is mainly meant to illustrate and restrict what is allowed to be encoded for an arbitrary code\nvalue. This is meant to only be used as a semantic reference point. This data structure is loosely inspired by the\n",(0,r.jsx)(t.a,{href:"https://www.hl7.org/fhir/datatypes.html#code",children:"FHIR Code Type"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.hl7.org/fhir/datatypes.html#code",children:"FHIR Code Type"})}),"\n"]})]})}function v(e={}){let{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},30893:function(e,t,s){var n={"./img/BCID_H_rgb_pos.png":["85267","3312"],"./img/BCID_H_rgb_rev.png":["76962","415"],"./img/docusaurus.png":["80905","4306"],"./img/favicon.png":["74219","5048"],"./img/easytouse.svg":["28357","4598"],"./img/cc-by.png":["68915","9872"],"./img/interoperable.svg":["13717","3638"],"./img/opensource.svg":["71518","7283"],"./img/favicon.ico":["59469","9934"],"./img/logo.svg":["99868","4701"]};function r(e){if(!s.o(n,e))return Promise.resolve().then(function(){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t});var t=n[e],r=t[0];return s.e(t[1]).then(function(){return s(r)})}r.keys=()=>Object.keys(n),r.id=30893,e.exports=r},92870:function(e,t,s){"use strict";function n(e="http"){return{resolve:e=>new Promise((t,s)=>{fetch(e.toString(),{headers:{Accept:"application/json"}}).then(e=>e.json()).then(e=>t(e)).catch(e=>s(e))})}}function r(e){let{basePath:t,jsonPointer:r,remote:i}=e,o={};return t&&(o.resolvers={file:function(e=""){return{resolve:t=>new Promise((n,r)=>{let i=function(e,t=""){let s=e.toString().split("/"),n=t;for(let e=0;e<s.length;e++)if(".."===s[e])n=n.split("/").slice(0,-1).join("/");else{if("."===s[e])continue;n=`${n}/${s[e]}`}return n}(t,e);s(30893)(`./${i.substring(1)}`).then(e=>n(e.default)).catch(e=>r(e))})}}(t)}),i&&(void 0===o.resolvers&&(o.resolvers={}),o.resolvers.http=n("http"),o.resolvers.https=n("https")),r&&(o.jsonPointer=r),o}s.d(t,{kG:()=>r})}}]);